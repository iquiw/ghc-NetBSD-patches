From 89b40696daf3e11af599f7ca32b62b6d9d1ce8b9 Mon Sep 17 00:00:00 2001
From: Iku Iwasa <iku.iwasa@gmail.com>
Date: Sun, 13 Apr 2014 09:26:57 +0900
Subject: [PATCH] Adapt to NetBSD

---
 libraries/base/include/EventConfig.h.in            |  6 ++++
 .../Console/Haskeline/Backend/Posix/IConv.hsc      |  2 +-
 libraries/old-time/System/Time.hsc                 |  8 ++---
 libraries/old-time/old-time.cabal                  |  1 +
 libraries/time/Data/Time/Clock/CTimeval.hs         | 38 ++++++++++++++++++----
 libraries/time/configure.ac                        |  5 +++
 libraries/time/time.cabal                          |  1 +
 libraries/unix/System/Posix/Signals.hsc            | 13 ++++++--
 rts/posix/OSThreads.c                              |  7 ++--
 9 files changed, 65 insertions(+), 16 deletions(-)

diff --git a/libraries/base/include/EventConfig.h.in b/libraries/base/include/EventConfig.h.in
index 061b6ac..6438f44 100644
--- a/libraries/base/include/EventConfig.h.in
+++ b/libraries/base/include/EventConfig.h.in
@@ -89,3 +89,9 @@
 
 /* The size of `kev.flags', as computed by sizeof. */
 #undef SIZEOF_KEV_FLAGS
+
+/* The size of `kev.filter', as computed by sizeof. */
+#undef SIZEOF_KEV_FILTER
+
+/* The size of `kev.flags', as computed by sizeof. */
+#undef SIZEOF_KEV_FLAGS
diff --git a/libraries/haskeline/System/Console/Haskeline/Backend/Posix/IConv.hsc b/libraries/haskeline/System/Console/Haskeline/Backend/Posix/IConv.hsc
index 56691cb..3f920fc 100644
--- a/libraries/haskeline/System/Console/Haskeline/Backend/Posix/IConv.hsc
+++ b/libraries/haskeline/System/Console/Haskeline/Backend/Posix/IConv.hsc
@@ -65,7 +65,7 @@ openPartialDecoder codeset = do
 ---------------------
 -- Setting the locale
 
-foreign import ccall "setlocale" c_setlocale :: CInt -> CString -> IO CString
+foreign import capi "locale.h setlocale" c_setlocale :: CInt -> CString -> IO CString
 
 setLocale :: Maybe String -> IO (Maybe String)
 setLocale oldLocale = (maybeWith withCAString) oldLocale $ \loc_p -> do
diff --git a/libraries/old-time/System/Time.hsc b/libraries/old-time/System/Time.hsc
index 8074783..ec6739f 100644
--- a/libraries/old-time/System/Time.hsc
+++ b/libraries/old-time/System/Time.hsc
@@ -734,17 +734,17 @@ type CTm = () -- struct tm
 foreign import ccall unsafe "HsTime.h __hscore_localtime_r"
     localtime_r :: Ptr CTime -> Ptr CTm -> IO (Ptr CTm)
 #else
-foreign import ccall unsafe "time.h localtime"
+foreign import capi unsafe "time.h localtime"
     localtime   :: Ptr CTime -> IO (Ptr CTm)
 #endif
 #if HAVE_GMTIME_R
 foreign import ccall unsafe "HsTime.h __hscore_gmtime_r"
     gmtime_r    :: Ptr CTime -> Ptr CTm -> IO (Ptr CTm)
 #else
-foreign import ccall unsafe "time.h gmtime"
+foreign import capi unsafe "time.h gmtime"
     gmtime      :: Ptr CTime -> IO (Ptr CTm)
 #endif
-foreign import ccall unsafe "time.h mktime"
+foreign import capi unsafe "time.h mktime"
     mktime      :: Ptr CTm   -> IO CTime
 
 #if HAVE_GETTIMEOFDAY
@@ -760,6 +760,6 @@ foreign import ccall unsafe "time.h ftime" ftime :: Ptr CTimeB -> IO CInt
 foreign import ccall unsafe "time.h ftime" ftime :: Ptr CTimeB -> IO ()
 #endif
 #else
-foreign import ccall unsafe "time.h time" time :: Ptr CTime -> IO CTime
+foreign import capi unsafe "time.h time" time :: Ptr CTime -> IO CTime
 #endif
 #endif /* ! __HUGS__ */
diff --git a/libraries/old-time/old-time.cabal b/libraries/old-time/old-time.cabal
index 1d99557..3e6320b 100644
--- a/libraries/old-time/old-time.cabal
+++ b/libraries/old-time/old-time.cabal
@@ -44,6 +44,7 @@ source-repository this
 
 Library
     default-language: Haskell2010
+    default-extensions: CApiFFI
     other-extensions: Trustworthy
 
     exposed-modules:
diff --git a/libraries/time/Data/Time/Clock/CTimeval.hs b/libraries/time/Data/Time/Clock/CTimeval.hs
index c8a692a..e29fccb 100644
--- a/libraries/time/Data/Time/Clock/CTimeval.hs
+++ b/libraries/time/Data/Time/Clock/CTimeval.hs
@@ -7,20 +7,44 @@ module Data.Time.Clock.CTimeval where
 import Foreign.Safe
 import Foreign.C
 
-data CTimeval = MkCTimeval CLong CLong
+#include "HsTimeConfig.h"
+
+--
+-- we assume time_t and suseconds_t are either long long, long or int.
+--
+#ifndef SIZEOF_TIME_T
+#error "SIZEOF_TIME_T is not defined, run autoreconf!"
+#endif
+#if SIZEOF_TIME_T == SIZEOF_LONG_LONG
+type TimeT = CLLong
+#elif SIZEOF_TIME_T == SIZEOF_LONG
+type TimeT = CLong
+#elif SIZEOF_TIME_T == SIZEOF_INT
+type TimeT = CInt
+#endif
+
+#if SIZEOF_SUSECONDS_T == SIZEOF_LONG_LONG
+type SusecondsT = CLLong
+#elif SIZEOF_SUSECONDS_T == SIZEOF_LONG
+type SusecondsT = CLong
+#elif SIZEOF_SUSECONDS_T == SIZEOF_INT
+type SusecondsT = CInt
+#endif
+
+data CTimeval = MkCTimeval TimeT SusecondsT
 
 instance Storable CTimeval where
-	sizeOf _ = (sizeOf (undefined :: CLong)) * 2
+	sizeOf _ = sizeOf (undefined :: TimeT) + sizeOf (undefined :: SusecondsT)
 	alignment _ = alignment (undefined :: CLong)
 	peek p = do
-		s   <- peekElemOff (castPtr p) 0
-		mus <- peekElemOff (castPtr p) 1
+		s   <- peekByteOff p 0
+		mus <- peekByteOff p (sizeOf (undefined :: TimeT))
 		return (MkCTimeval s mus)
 	poke p (MkCTimeval s mus) = do
-		pokeElemOff (castPtr p) 0 s
-		pokeElemOff (castPtr p) 1 mus
+		pokeByteOff p 0 s
+		pokeByteOff p (sizeOf (undefined :: TimeT)) mus
 
-foreign import ccall unsafe "time.h gettimeofday" gettimeofday :: Ptr CTimeval -> Ptr () -> IO CInt
+foreign import capi unsafe "HsTime.h gettimeofday" gettimeofday :: Ptr CTimeval -> Ptr () -> IO CInt
 
 -- | Get the current POSIX time from the system clock.
 getCTimeval :: IO CTimeval
diff --git a/libraries/time/configure.ac b/libraries/time/configure.ac
index 82a1173..3549fd6 100644
--- a/libraries/time/configure.ac
+++ b/libraries/time/configure.ac
@@ -14,6 +14,11 @@ AC_CONFIG_HEADERS([include/HsTimeConfig.h])
 
 AC_CHECK_HEADERS([time.h])
 AC_CHECK_FUNCS([gmtime_r localtime_r])
+AC_CHECK_SIZEOF([time_t])
+AC_CHECK_SIZEOF([suseconds_t])
+AC_CHECK_SIZEOF([int])
+AC_CHECK_SIZEOF([long])
+AC_CHECK_SIZEOF([long long])
 
 AC_STRUCT_TM
 AC_STRUCT_TIMEZONE
diff --git a/libraries/time/time.cabal b/libraries/time/time.cabal
index fad816c..acd6726 100644
--- a/libraries/time/time.cabal
+++ b/libraries/time/time.cabal
@@ -46,6 +46,7 @@ library
             Rank2Types 
             DeriveDataTypeable 
             StandaloneDeriving
+            CApiFFI
         cpp-options: -DLANGUAGE_Rank2Types -DLANGUAGE_DeriveDataTypeable -DLANGUAGE_StandaloneDeriving
     else
         if impl(hugs)
diff --git a/libraries/unix/System/Posix/Signals.hsc b/libraries/unix/System/Posix/Signals.hsc
index d4c6d51..439c526 100644
--- a/libraries/unix/System/Posix/Signals.hsc
+++ b/libraries/unix/System/Posix/Signals.hsc
@@ -603,8 +603,13 @@ awaitSignal maybe_sigset = do
   -- XXX My manpage says it can also return EFAULT. And why is ignoring
   -- EINTR the right thing to do?
 
+#ifdef __HUGS__
 foreign import ccall unsafe "sigsuspend"
   c_sigsuspend :: Ptr CSigset -> IO CInt
+#else
+foreign import capi unsafe "signal.h sigsuspend"
+  c_sigsuspend :: Ptr CSigset -> IO CInt
+#endif
 #endif
 
 #ifdef __HUGS__
@@ -627,6 +632,9 @@ foreign import ccall unsafe "__hscore_sigfillset"
 
 foreign import ccall unsafe "__hscore_sigismember"
   c_sigismember :: Ptr CSigset -> CInt -> IO CInt
+
+foreign import ccall unsafe "sigpending"
+  c_sigpending :: Ptr CSigset -> IO CInt
 #else
 foreign import capi unsafe "signal.h sigdelset"
   c_sigdelset   :: Ptr CSigset -> CInt -> IO CInt
@@ -636,7 +644,8 @@ foreign import capi unsafe "signal.h sigfillset"
 
 foreign import capi unsafe "signal.h sigismember"
   c_sigismember :: Ptr CSigset -> CInt -> IO CInt
-#endif /* __HUGS__ */
 
-foreign import ccall unsafe "sigpending"
+foreign import capi unsafe "signal.h sigpending"
   c_sigpending :: Ptr CSigset -> IO CInt
+
+#endif /* __HUGS__ */
diff --git a/rts/posix/OSThreads.c b/rts/posix/OSThreads.c
index 13a176c..c5b1555 100644
--- a/rts/posix/OSThreads.c
+++ b/rts/posix/OSThreads.c
@@ -20,6 +20,9 @@
  * because of some specific types, like u_char, u_int, etc. */
 #define __BSD_VISIBLE	1
 #endif
+#if defined(netbsd_HOST_OS)
+#define _NETBSD_SOURCE	1
+#endif
 
 #include "Rts.h"
 
@@ -44,7 +47,7 @@
 #include <string.h>
 #endif
 
-#if defined(darwin_HOST_OS) || defined(freebsd_HOST_OS)
+#if defined(darwin_HOST_OS) || defined(freebsd_HOST_OS) || defined(netbsd_HOST_OS)
 #include <sys/types.h>
 #include <sys/sysctl.h>
 #endif
@@ -238,7 +241,7 @@ getNumberOfProcessors (void)
         nproc = sysconf(_SC_NPROCESSORS_ONLN);
 #elif defined(HAVE_SYSCONF) && defined(_SC_NPROCESSORS_CONF)
         nproc = sysconf(_SC_NPROCESSORS_CONF);
-#elif defined(darwin_HOST_OS) || defined(freebsd_HOST_OS)
+#elif defined(darwin_HOST_OS) || defined(freebsd_HOST_OS) || defined(netbsd_HOST_OS)
         size_t size = sizeof(nat);
         if(0 != sysctlbyname("hw.ncpu",&nproc,&size,NULL,0))
             nproc = 1;
-- 
1.9.0

